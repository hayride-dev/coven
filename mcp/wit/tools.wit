
package hayride:mcp@0.0.60;

interface tools {
    use types.{tool, content};

    enum error-code {
        tool-call-failed,
        tool-not-found,
        unknown
    }

    resource error {
        /// return the error code.
        code: func() -> error-code;
        /// errors can propagated with backend specific status through a string value.
        data: func() -> string;
    }

    record list-tools-result {
        tools: list<tool>,
        next-cursor: string,
        meta: list<tuple<string, string>>,
    }

    record call-tool-result {
        // unstructured content in the form of multiple content items
        content: list<content>,
        // structured content in the form of a JSON string
        structured-content: list<tuple<string, string>>,
        // true for tool execution errors
        is-error: bool,
        meta: list<tuple<string, string>>,
    }

    resource tools {
        constructor();
        list-tools: func(cursor: string) -> result<list-tools-result, error>;
        call-tool: func(name: string, arguments: list<tuple<string, string>>) -> result<call-tool-result, error>;
    }
}

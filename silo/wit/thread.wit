package hayride:silo@0.0.49;

interface threads {
    /// system error numbers
    type err-no = u32;

    enum thread-status {
        unknown,
        processing,
        exited,
        killed
    }

    record thread-metadata {
        id: string,
        pkg: string,
        function: string,
        args: list<string>,
        status: thread-status
    }

    resource thread {
        id: func() -> result<string,err-no>;
        wait: func() -> result<list<u8>, err-no>;
    }

    spawn: func(pkg: string, function: string, args: list<string>) -> result<thread, err-no>;
    status: func(id: string) -> result<thread-metadata, err-no>; // get metadata about a single thread
    kill: func(id: string) -> result<_, err-no>;
    group: func() -> result<list<thread-metadata>, err-no>; // list of running threads
}

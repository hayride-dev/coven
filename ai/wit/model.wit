package hayride:ai@0.0.40;

interface model {
    use inference-stream.{graph-execution-context-stream};
    use context.{context};

    enum error-code {
        context-error,
        context-encode,
        context-decode,
        compute-error,
        unknown
    }

    resource error {
        /// return the error code.
        code: func() -> error-code;
        /// errors can propagated with backend specific status through a string value.
        data: func() -> string;
    }

    resource model {
        constructor(graph: graph-execution-context-stream, ctx: context); // Initialize the model with a graph and a context
        compute: func(ctx: borrow<context>) -> result<error>; // to use the context object and call the graph compute with context 
    }
}
package hayride:ai@0.0.51;

interface agents {
    use types.{message, tool-schema, tool-input, tool-output};
    use context.{context};
    use model.{model};
    use wasi:io/streams@0.2.0.{output-stream};
  
    enum error-code {
        invoke-error,
        unknown
    }

    resource error {
        /// return the error code.
        code: func() -> error-code;
        /// errors can propagated with backend specific status through a string value.
        data: func() -> string;
    }

    resource agent {
        constructor(name: string, instruction: string, tools: list<tool-schema>);
        context: func() -> result<list<message>, error>;
        tool-call: func(tool-input: tool-input) -> result<tool-output, error>;
    }            

    invoke: func(ctx: context, model: model, agent:agent, input: list<message>) -> result<message, error>;
    invoke-stream: func(ctx: context, model: model, agent:agent, input: list<message>, output: output-stream) -> result<_, error>;
}

package hayride:ai@0.0.64;

interface runner {
    use types.{message, runner-options};
    use agents.{agent};
    use model.{format};
    use wasi:io/streams@0.2.0.{output-stream};
    use tensor-stream.{tensor-stream};
    use inference-stream.{graph-execution-context-stream};
    use graph-stream.{graph-stream};
    use wasi:http/types@0.2.0.{fields, response-outparam, outgoing-response, outgoing-body};

    enum error-code {
        invoke-error,
        unknown
    }

    resource error {
        /// return the error code.
        code: func() -> error-code;
        /// errors can propagated with backend specific status through a string value.
        data: func() -> string;
    }

    resource runner {
        constructor(options: runner-options);
        invoke: func(message: message, agent: borrow<agent>, format: borrow<format>, graph: borrow<graph-execution-context-stream>, output-stream: option<borrow<output-stream>>) -> result<list<message>, error>;
    }
}
